user http;
worker_processes 1;

# error_log  logs/error.log;

events {
    worker_connections 1024;
}


http {
    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;
    tcp_nopush on;

    keepalive_timeout 65;

    charset utf-8;

    # Include base services, such as mdb
    include services/*.nginx;

    # Single Sign-On implementation. Configuration is at sso/config.lua
    lua_package_path '/etc/nginx/sso/?.lua;;';
    init_by_lua_file sso/init.lua;

    # SSO can then be enabled per-server. You need to include the following
    # line: include enable_sso;
    # Sample server block:
    # server {
    #     listen 80;
    #     server_name example-private;
    #     location / {
    #         include enable_sso;
    #         proxy_pass http://host:port/
    #     }
    # }

    # Uncomment the line below to enable contest services.
    # include services_contest/*.nginx;

    # Shared static files (jquery, bootstrap, etc.)
    server {
        listen 80;
        server_name static;
        location / {
            access_log off;
            root /var/prologin/static_shared;
            # Enforce cache to reduce traffic
            expires 1w;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate, no-transform";
        }
    }

    # Fallback server, renders a 404
    server {
        listen 80 default_server;
        location / {
            return 404;
        }
    }
}
